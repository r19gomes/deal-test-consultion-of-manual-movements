@model Deal.UI.Models.ManualMovements.IndexViewModel

@{
    ViewBag.Title = "Index";
}

<div class="col-md-12 filtro">

    @using (Html.BeginForm("Index", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new
    {
        @class = "form-horizontal",
        role = "form"
    }))
    {
        <div class="container">

            <h4>Movimentos Manuais</h4>

            <div class="form-group col-md-12" style="margin-left: 0em !important;margin-top: 2em !important;padding-left: 0em !important">
                <div class="form-inline col-md-12" style="min-height: 3em !important">
                    <div class="form-group col-md-8" style="padding: 0em !important">
                        <label for="userName">Mês:</label>
                        <input type="text" class="form-control" id="userName" placeholder="Mês de referência do movimento"
                               style="width: 90% !important">
                        @*@Html.ValidationMessageFor(m => m.Users.First().Nome, "", new { @class = "text-danger" })*@
                    </div>
                    <div class="form-group col-md-4">
                        <button type="submit" class="btn btn-default" onclick="beforeSubmit()">Consultar</button>
                    </div>
                </div>
            </div>

            <div class="col-md-12 jump-line">&nbsp;</div>

            <div class="col-md-12" style="padding: 0em !important;">
                @Html.ActionLink("Cadastrar", "Create", "Create", new { @class = "btn btn-primary" })
            </div>

            <div class="col-md-12 jump-line">&nbsp;</div>

            <div class="col-md-12" style="min-height: 2em !important;vertical-align: middle">
                <section id="labelRegistro">
                    <div class="row form-row-two-lines">
                        <div class="col-md-1 label-listing form-text-center form-tow-lines">@Html.LabelFor(m => m.Indexes.First().Mes)</div>
                        <div class="col-md-1 label-listing form-text-center form-tow-lines">@Html.LabelFor(m => m.Indexes.First().Ano)</div>
                        <div class="col-md-1 label-listing form-text-center form-tow-lines">@Html.LabelFor(m => m.Indexes.First().ProdutoCodigo)</div>
                        <div class="col-md-2 label-listing form-text-center form-tow-lines">@Html.LabelFor(m => m.Indexes.First().ProdutoNome)</div>
                        <div class="col-md-2 label-listing form-text-center form-tow-lines">@Html.LabelFor(m => m.Indexes.First().Numero)</div>
                        <div class="col-md-2 label-listing form-text-center form-tow-lines">@Html.LabelFor(m => m.Indexes.First().Descricao)</div>
                        <div class="col-md-1 label-listing form-text-center form-tow-lines">@Html.LabelFor(m => m.Indexes.First().Valor)</div>
                        <div class="col-md-1 label-listing form-text-center form-tow-lines">Ações</div>
                    </div>
                </section>
            </div>

            <div class="col-md-12">
                <section id="labelRegistro">
                    @{
                        if (Model.Indexes != null)
                        {
                            foreach (var item in Model.Indexes)
                            {
                                //  Obtém os campos demonstrados no grid de resultado.
                                var dataHora = item.DataHora;

                                //  Exibe os conteúdos recuperados no grid de resultado.
                                <div class="row">
                                    <div class="col-md-1 content-listing form-text-center">@item.Mes</div>
                                    <div class="col-md-1 content-listing form-text-center">@item.Ano</div>
                                    <div class="col-md-1 content-listing form-text-center">@item.ProdutoCodigo</div>
                                    <div class="col-md-2 content-listing">@item.ProdutoNome</div>
                                    <div class="col-md-2 content-listing form-text-center">@item.Numero</div>
                                    <div class="col-md-2 content-listing">@item.Descricao</div>
                                    <div class="col-md-1 content-listing form-text-right">@item.Valor</div>
                                    <div class="col-md-1 content-listing form-text-center">
                                        @Html.ActionLink("Editar", "Edit", new
                                       {
                                           Mes = item.Mes,
                                           Ano = item.Ano,
                                           ProdutoCodigo = item.ProdutoCodigo,
                                           ProdutoCosif = item.ProdutoCosif,
                                           ProdutoNome = item.ProdutoNome,
                                           Numero = item.Numero,
                                           Descricao = item.Descricao,
                                           Valor = item.Valor,
                                           DataHora = item.DataHora,
                                           Usuario = item.Usuario
                                       })
                                    </div>

                                </div>
                            }
                        }
                    }
                </section>
            </div>

            <div class="col-md-12 pular_linha">&nbsp;</div>

            @if (Model.Indexes.PageCount > 1)
            {
                <div class="paginacao col-md-12">
                    Página @(Model.Indexes.PageCount < Model.Indexes.PageNumber ? 0 : Model.Indexes.PageNumber) de @Model.Indexes.PageCount

                    @if (Model.Indexes.HasPreviousPage)
                    {
                        @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                        @Html.Raw(" ");
                        @Html.ActionLink(string.Concat("<", "Anterior"), "Index",
                            new { pagina = Model.Indexes.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    }
                    else
                    {
                        @:<<
                        @Html.Raw(" ");
                        @:< Anterior
                    }

                    @if (Model.Indexes.HasNextPage)
                    {
                        @Html.ActionLink(string.Concat("Próximo", ">"), "Index", 
                            new { page = Model.Indexes.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                        @Html.Raw(" ");
                        @Html.ActionLink(">>", "Index", 
                            new { page = Model.Indexes.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    }
                    else
                    {
                        @:Próxima >
                        @Html.Raw(" ")
                        @:>>
                    }
                </div>
            }

        </div>
    }

</div>

@section Scripts {
    <script type="text/javascript">

        /*
        ** Inicializa toda a página parcial ou view Index.
        */
        $(document).ready(function () {

            let $userName = $("#userName");
            if ($userName != null) {
                $userName.focus();
            }

        });

        var beforeSubmit = function () {

            let isValid = true;
            let message = '';

        }

    </script>
}